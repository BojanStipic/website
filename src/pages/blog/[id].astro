---
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import { Image } from "astro:assets";
import { getCollection, render } from "astro:content";
import readingTime from "reading-time";

import Comments from "@/components/Comments.astro";
import Date from "@/components/Date.astro";
import Prose from "@/components/Prose.astro";
import TableOfContents from "@/components/table-of-contents/TableOfContents.astro";
import Tags from "@/components/Tags.astro";
import Layout from "@/layouts/Layout.astro";

export const getStaticPaths = (async () => {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { id: post.id },
    props: post,
  }));
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const post = Astro.props;
const { Content, headings } = await render(post);
---

<Layout
  title={post.data.title}
  description={post.data.description}
  imageUrl={post.data.cover.src}
>
  <article
    class="mx-auto box-content flex max-w-prose flex-col gap-8 px-4 md:text-lg"
  >
    <header class="grid grid-cols-1 gap-4 md:grid-cols-2">
      <Image src={post.data.cover} alt="Blog post's cover art" priority />
      <div class="flex flex-col gap-2">
        <h1 class="text-4xl font-bold md:mt-4">{post.data.title}</h1>
        <Tags tags={post.data.tags} />
        <div class="flex divide-x divide-overlay0 text-sm text-subtext0">
          <span class="pr-4">
            Published on <Date date={post.data.pubDate} />
          </span>
          <span class="pl-4">{readingTime(post.body ?? "").text}</span>
        </div>
      </div>
    </header>
    <p>{post.data.description}</p>
    <TableOfContents headings={headings} />
    <Prose>
      <Content />
    </Prose>
    <Comments title={post.data.title} />
  </article>
</Layout>
