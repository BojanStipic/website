---
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import readingTime from "reading-time";

import Date from "@/components/Date.astro";
import Prose from "@/components/Prose.astro";
import TableOfContents from "@/components/table-of-contents/TableOfContents.astro";
import Layout from "@/layouts/Layout.astro";

export const getStaticPaths = (async () => {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const post = Astro.props;
const { Content, headings } = await post.render();
---

<Layout title={post.data.title}>
  <article class="mx-auto box-content max-w-prose px-4 md:text-lg lg:text-xl">
    <header class="mb-8 grid grid-cols-1 gap-4 md:grid-cols-2">
      <Image src={post.data.cover} alt="Blog post's cover image" />
      <div class="flex flex-col gap-2">
        <h1 class="mt-4 text-4xl font-bold">{post.data.title}</h1>
        <ul class="flex flex-wrap gap-2">
          {
            post.data.tags.map((tag) => (
              <li class="rounded-md bg-primary/10 px-2 py-1 text-sm font-semibold uppercase text-primary">
                {tag}
              </li>
            ))
          }
        </ul>
        <div class="flex gap-4 text-sm text-subtext0">
          <Date date={post.data.pubDate} />
          <span>{readingTime(post.body).text}</span>
        </div>
      </div>
    </header>
    <p class="mb-8">{post.data.description}</p>
    <TableOfContents headings={headings} />
    <Prose>
      <Content />
    </Prose>
  </article>
</Layout>
